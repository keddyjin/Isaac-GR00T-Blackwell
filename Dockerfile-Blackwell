# Build cmd for x86_64: docker build . -t gr00t:test -f Dockerfile-Blackwell --platform linux/amd64
#           for arm64: docker build . -t gr00t:test -f Dockerfile-Blackwell --platform linux/arm64  

ARG TARGETPLATFORM
FROM --platform=$TARGETPLATFORM nvcr.io/nvidia/pytorch:25.06-py3

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH=/workspace:${PYTHONPATH}

ARG BUILDPLATFORM TARGETOS TARGETARCH TARGETPLATFORM
# RUN echo $BUILDPLATFORM $TARGETPLATFORM $TARGETOS $TARGETARCH
RUN if [ "$TARGETARCH" = "arm64" ]; then \
      echo "For arm64, need to source build and install decord" && \
      apt update && apt install -y ffmpeg libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev && \
      # Create a dummy libnvcuvid.so to solve the issue related to libnvcuvid.so
      touch /usr/local/cuda/lib64/libnvcuvid.so && \
      git clone --recursive https://github.com/milahu/decord.git && \
      cd decord && git checkout fix-build-ffmpeg6 && \
      mkdir build && cd build && \
      cmake .. -DUSE_CUDA=ON -DCMAKE_BUILD_TYPE=Release && \
      make -j8 && \
      cd ../python && python3 setup.py install && \
      cd .. && rm -rf decord; \
    else \
      echo "For x86_64, using pip to install decord"; \
    fi

# System dependencies
RUN apt update && \
    # Add OpenCV system dependencies
    apt install -y libglib2.0-0 libsm6 libxext6 libxrender-dev

RUN pip install --upgrade pip setuptools
RUN pip install gpustat wandb==0.19.0
# Create and set working directory
WORKDIR /workspace
# Installing pytorch3d from source by pip git
RUN FORCE_CUDA=1 pip install "git+https://github.com/facebookresearch/pytorch3d.git"
# Copy pyproject.toml for dependencies
COPY pyproject-Blackwell.toml ./pyproject.toml
# Install dependencies from pyproject.toml
RUN pip install -e .[base]
# Clean any existing OpenCV installations
RUN pip uninstall -y opencv-python opencv-python-headless || true
RUN rm -rf /usr/local/lib/python3.10/dist-packages/cv2 || true
RUN pip install opencv-python==4.8.0.74 opencv-python-headless==4.12.0.88 || true
RUN pip install opencv-python-headless==4.11.0.86 numpy==1.26.4 || true

COPY getting_started /workspace/getting_started
COPY scripts /workspace/scripts
COPY demo_data /workspace/demo_data
RUN pip install -e . --no-deps
